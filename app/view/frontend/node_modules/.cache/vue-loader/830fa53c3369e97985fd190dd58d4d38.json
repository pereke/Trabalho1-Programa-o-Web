{"remainingRequest":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/src/components/Alunos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/src/components/Alunos.vue","mtime":1562278025579},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport EditarAlunos from './EditarAlunos.vue'\n\nexport default {\n    name: \"App\",\n    components: {\n        appEditarAlunos: EditarAlunos\n    },\n    data () {\n        return {\n            dialog: false,\n            dialogNote: {},\n            headers: [\n            { text: 'Nome', value: 'nome', align: 'center', sortable: false },\n            { text: 'Matricula', value: 'matricula', sortable: false },\n            { text: 'Curso', value: 'curso', sortable: false},\n            { text: 'Categoria', value: 'categoria', sortable: false},\n            { text: 'Ações', value: 'nome', sortable: false},\n            ],\n            alunos: [],\n        }\n    },\n    created() {\n        this.atualizarTabela()\n    },\n    methods: {\n        setError (error, text) {\n            this.error = (error.response && error.response.data && error.response.data.error) || text\n        },\n        atualizarTabela() {\n            this.$http.secured.get('/api/v1/alunos')\n                .then(response => { this.alunos = response.data.data })\n                .catch(error => this.setError(error, 'Algo deu errado!'))\n        },\n        fecharEditarAluno(aluno) {\n            this.dialogNote[aluno.id] = false\n            this.atualizarTabela()\n        },\n        fecharAdicionarAluno() {\n            this.dialog = false\n            this.atualizarTabela()\n        },\n        deletarAluno(aluno) {\n            this.$http.secured.delete(`/api/v1/alunos/${aluno.id}`)\n            .then(this.alunos.splice(this.alunos.indexOf(aluno), 1))\n            .catch(error => this.setError(error, 'Nao consegue deletar aluno'))\n        }\n    }\n}\n",{"version":3,"sources":["Alunos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Alunos.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-layout wrap>\n        <v-flex xs12>\n            <v-data-table\n                :headers=\"headers\"\n                :items=\"alunos\"\n                class=\"elevation-1\"\n            >\n                <template v-slot:items=\"props\">\n                <td>{{ props.item.nome }}</td>\n                <td class=\"text-xs-left\">{{ props.item.matricula}}</td>\n                <td class=\"text-xs-left\">{{ props.item.curso }}</td>\n                <td class=\"text-xs-left\">{{ props.item.categoria }}</td>\n                <td class=\"justify-center layout px-0\">\n                    <v-dialog v-model=\"dialogNote[props.item.id]\" :key=\"props.item.id\">\n                        <template v-slot:activator=\"{ on }\">\n                            <v-btn v-on=\"on\" icon>\n                                <v-icon small class=\"mr-2\">edit</v-icon>\n                            </v-btn>\n                        </template>\n                        <v-card>\n                            <v-card-title\n                                class=\"headline grey lighten-2\"\n                                primary-title\n                            > Editar Aluno\n                            </v-card-title>\n                            <v-card-text>\n                                <app-editar-alunos v-bind:key=\"props.item.id\"\n                                    v-bind:idaluno=\"props.item.id\"\n                                    v-bind:novo=\"false\"\n                                    @fechar=\"fecharEditarAluno(props.item)\"\n                                    @salvar=\"fecharEditarAluno(props.item)\">\n                                </app-editar-alunos>\n                            </v-card-text>\n                        </v-card>\n                    </v-dialog>\n                    <v-btn icon v-on:click=\"deletarAluno(props.item)\">\n                        <v-icon small>delete</v-icon>\n                    </v-btn>\n                </td>\n                </template>\n            </v-data-table>\n        </v-flex>\n        <v-flex xs12>\n        <v-container px-5>\n            <v-dialog v-model=\"dialog\">\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn class=\"text-capitalize font-weight-regular\" color=\"#3b5998\"  dark v-on=\"on\" >Adicionar Aluno</v-btn>\n                </template>\n                <v-card>\n                    <v-card-title\n                        class=\"headline grey lighten-2\"\n                        primary-title\n                    > Adicionar Aluno\n                    </v-card-title>\n                    <v-card-text>\n                        <app-editar-alunos\n                        v-bind:novo=\"true\"\n                        @fechar=\"fecharAdicionarAluno()\"\n                        @salvar=\"fecharAdicionarAluno()\">\n                    </app-editar-alunos>\n                    </v-card-text>\n                </v-card>\n            </v-dialog>\n        </v-container>\n    </v-flex>\n    </v-layout>\n\n</template>\n\n\n<style>\n</style>\n\n<script>\n\n    import EditarAlunos from './EditarAlunos.vue'\n\n    export default {\n        name: \"App\",\n        components: {\n            appEditarAlunos: EditarAlunos\n        },\n        data () {\n            return {\n                dialog: false,\n                dialogNote: {},\n                headers: [\n                { text: 'Nome', value: 'nome', align: 'center', sortable: false },\n                { text: 'Matricula', value: 'matricula', sortable: false },\n                { text: 'Curso', value: 'curso', sortable: false},\n                { text: 'Categoria', value: 'categoria', sortable: false},\n                { text: 'Ações', value: 'nome', sortable: false},\n                ],\n                alunos: [],\n            }\n        },\n        created() {\n            this.atualizarTabela()\n        },\n        methods: {\n            setError (error, text) {\n                this.error = (error.response && error.response.data && error.response.data.error) || text\n            },\n            atualizarTabela() {\n                this.$http.secured.get('/api/v1/alunos')\n                    .then(response => { this.alunos = response.data.data })\n                    .catch(error => this.setError(error, 'Algo deu errado!'))\n            },\n            fecharEditarAluno(aluno) {\n                this.dialogNote[aluno.id] = false\n                this.atualizarTabela()\n            },\n            fecharAdicionarAluno() {\n                this.dialog = false\n                this.atualizarTabela()\n            },\n            deletarAluno(aluno) {\n                this.$http.secured.delete(`/api/v1/alunos/${aluno.id}`)\n                .then(this.alunos.splice(this.alunos.indexOf(aluno), 1))\n                .catch(error => this.setError(error, 'Nao consegue deletar aluno'))\n            }\n        }\n    }\n</script>\n"]}]}