{"remainingRequest":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/src/components/EditarAulas.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/src/components/EditarAulas.vue","mtime":1562278350098},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninput,select {\n    margin-left: 10px;\n}\n",{"version":3,"sources":["EditarAulas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA","file":"EditarAulas.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-form v-model=\"valid\">\n        <v-text-field\n            v-model=\"nome\"\n            :rules=\"nomeRules\"\n            label=\"Nome\"\n            required\n        ></v-text-field>\n        <v-select\n            v-model=\"categoria\"\n            :items=\"categoriaItems\"\n            label=\"Categoria\"\n            required\n        ></v-select>\n        <v-text-field\n            v-model=\"qtSemana\"\n            :rules=\"qtSemanaRules\"\n            label=\"Quantidade por semana\"\n            required\n        ></v-text-field>\n        <v-btn color=\"success\" @click=\"salvar()\">Salvar </v-btn>\n        <v-btn color=\"error\"  @click=\"fecharDialogo()\">Voltar </v-btn>\n    </v-form>\n</template>\n\n\n<style>\n    input,select {\n        margin-left: 10px;\n    }\n</style>\n\n<script>\nexport default {\n    props: ['idaula', 'novo'],\n    data: () => ({\n        aula: Object,\n        materialDidatico: '',\n        valid: false,\n        nome: '',\n        categoria: '',\n        qtSemana: '',\n        nomeRules: [\n            v => !!v || 'Preenchimento necessário'\n        ],\n        categoriaItems: ['Graduação', 'Pós-Graduação'],\n        qtSemanaRules: [\n            v => !!v || 'Preenchimento necessário'\n        ],\n    }),\n    created() {\n        if(!this.novo) {\n            this.$http.secured.get(`/api/v1/aulas/${this.idaula}`)\n                .then(response =>{\n                    this.aula = response.data.data\n                    this.nome = this.aula.nomeAula\n                    this.categoria = this.aula.categoria\n                    this.qtSemana = this.aula.quantidade\n                    this.materialDidatico = this.aula.materialDidatico\n                    }\n                )\n                .catch(error => this.setError(error, 'Nao consegue achar aula'))\n\n        }\n    },\n    methods: {\n        salvar() {\n            //let formData = new FormData()\n            this.$emit('salvar')\n            if(this.novo) {\n                this.$http.secured.post('/api/v1/aulas/', {\n                    nomeAula: this.nome,\n                    quantidade: this.qtSemana,\n                    categoria: this.categoria,\n                    materialDidatico: this.materialDidatico\n                })\n            } else {\n                this.$http.secured.patch(`/api/v1/aulas/${this.aula.id}`, {\n                    nomeAula: this.nome,\n                    quantidade: this.qtSemana,\n                    categoria: this.categoria,\n                    materialDidatico: this.materialDidatico\n                })\n            }\n        },\n        uploadFile() {\n            this.materialDidatico = this.$refs.inputFile.files[0];\n        },\n        fecharDialogo() {\n            this.$emit('fechar')\n        }\n    }\n}\n</script>\n"]}]}