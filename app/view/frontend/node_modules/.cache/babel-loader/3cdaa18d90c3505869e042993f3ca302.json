{"remainingRequest":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/babel-loader/lib/index.js!/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/src/backend/axios/index.js","dependencies":[{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/src/backend/axios/index.js","mtime":1561726662808},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/home/italo/20191/Programa\\xE7\\xE3o Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/home/italo/20191/Programa\\xE7\\xE3o Web/Trabalho1-Programacao-Web/app/view/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport axios from 'axios';\nvar API_URL = 'http://localhost:3000';\nvar securedAxiosInstance = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nvar plainAxiosInstance = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nsecuredAxiosInstance.interceptors.request.use(function (config) {\n  var method = config.method.toUpperCase();\n\n  if (method !== 'OPTIONS' && method !== 'GET') {\n    config.headers = _objectSpread({}, config.headers, {\n      'X-CSRF-TOKEN': localStorage.csrf\n    });\n  }\n\n  return config;\n});\nsecuredAxiosInstance.interceptors.response.use(null, function (error) {\n  if (error.response && error.response.config && error.response.status === 401) {\n    return plainAxiosInstance.post('/refresh', {}, {\n      headers: {\n        'X-CSRF-TOKEN': localStorage.csrf\n      }\n    }).then(function (response) {\n      localStorage.csrf = response.data.csrf;\n      localStorage.signedIn = true;\n      var retryConfig = error.response.config;\n      retryConfig.headers['X-CSRF-TOKEN'] = localStorage.csrf;\n      return plainAxiosInstance.request(retryConfig);\n    }).catch(function (error) {\n      delete localStorage.csrf;\n      delete localStorage.signedIn;\n      location.replace('/');\n      return _Promise.reject(error);\n    });\n  } else {\n    return _Promise.reject(error);\n  }\n});\nexport { securedAxiosInstance, plainAxiosInstance };",{"version":3,"sources":["/home/italo/20191/Programação Web/Trabalho1-Programacao-Web/app/view/frontend/src/backend/axios/index.js"],"names":["axios","API_URL","securedAxiosInstance","create","baseURL","withCredentials","headers","plainAxiosInstance","interceptors","request","use","config","method","toUpperCase","localStorage","csrf","response","error","status","post","then","data","signedIn","retryConfig","catch","location","replace","reject"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,uBAAhB;AAEA,IAAMC,oBAAoB,GAAGF,KAAK,CAACG,MAAN,CAAa;AACxCC,EAAAA,OAAO,EAAEH,OAD+B;AAExCI,EAAAA,eAAe,EAAE,IAFuB;AAGxCC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAH+B,CAAb,CAA7B;AAQA,IAAMC,kBAAkB,GAAGP,KAAK,CAACG,MAAN,CAAa;AACtCC,EAAAA,OAAO,EAAEH,OAD6B;AAEtCI,EAAAA,eAAe,EAAE,IAFqB;AAGtCC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAH6B,CAAb,CAA3B;AAQAJ,oBAAoB,CAACM,YAArB,CAAkCC,OAAlC,CAA0CC,GAA1C,CAA8C,UAAAC,MAAM,EAAI;AACtD,MAAMC,MAAM,GAAGD,MAAM,CAACC,MAAP,CAAcC,WAAd,EAAf;;AACA,MAAID,MAAM,KAAK,SAAX,IAAwBA,MAAM,KAAK,KAAvC,EAA8C;AAC5CD,IAAAA,MAAM,CAACL,OAAP,qBACKK,MAAM,CAACL,OADZ;AAEE,sBAAgBQ,YAAY,CAACC;AAF/B;AAID;;AACD,SAAOJ,MAAP;AACD,CATD;AAWAT,oBAAoB,CAACM,YAArB,CAAkCQ,QAAlC,CAA2CN,GAA3C,CAA+C,IAA/C,EAAqD,UAAAO,KAAK,EAAI;AAC5D,MAAIA,KAAK,CAACD,QAAN,IAAkBC,KAAK,CAACD,QAAN,CAAeL,MAAjC,IAA2CM,KAAK,CAACD,QAAN,CAAeE,MAAf,KAA0B,GAAzE,EAA8E;AAC5E,WAAOX,kBAAkB,CAACY,IAAnB,CAAwB,UAAxB,EAAoC,EAApC,EAAwC;AAAEb,MAAAA,OAAO,EAAE;AAAE,wBAAgBQ,YAAY,CAACC;AAA/B;AAAX,KAAxC,EACJK,IADI,CACC,UAAAJ,QAAQ,EAAI;AAChBF,MAAAA,YAAY,CAACC,IAAb,GAAoBC,QAAQ,CAACK,IAAT,CAAcN,IAAlC;AACAD,MAAAA,YAAY,CAACQ,QAAb,GAAwB,IAAxB;AAEA,UAAIC,WAAW,GAAGN,KAAK,CAACD,QAAN,CAAeL,MAAjC;AACAY,MAAAA,WAAW,CAACjB,OAAZ,CAAoB,cAApB,IAAsCQ,YAAY,CAACC,IAAnD;AACA,aAAOR,kBAAkB,CAACE,OAAnB,CAA2Bc,WAA3B,CAAP;AACD,KARI,EAQFC,KARE,CAQI,UAAAP,KAAK,EAAI;AAChB,aAAOH,YAAY,CAACC,IAApB;AACA,aAAOD,YAAY,CAACQ,QAApB;AAEAG,MAAAA,QAAQ,CAACC,OAAT,CAAiB,GAAjB;AACA,aAAO,SAAQC,MAAR,CAAeV,KAAf,CAAP;AACD,KAdI,CAAP;AAeD,GAhBD,MAgBO;AACL,WAAO,SAAQU,MAAR,CAAeV,KAAf,CAAP;AACD;AACF,CApBD;AAsBA,SAASf,oBAAT,EAA+BK,kBAA/B","sourcesContent":["import axios from 'axios'\n\nconst API_URL = 'http://localhost:3000'\n\nconst securedAxiosInstance = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nconst plainAxiosInstance = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nsecuredAxiosInstance.interceptors.request.use(config => {\n  const method = config.method.toUpperCase()\n  if (method !== 'OPTIONS' && method !== 'GET') {\n    config.headers = {\n      ...config.headers,\n      'X-CSRF-TOKEN': localStorage.csrf\n    }\n  }\n  return config\n})\n\nsecuredAxiosInstance.interceptors.response.use(null, error => {\n  if (error.response && error.response.config && error.response.status === 401) {\n    return plainAxiosInstance.post('/refresh', {}, { headers: { 'X-CSRF-TOKEN': localStorage.csrf } })\n      .then(response => {\n        localStorage.csrf = response.data.csrf\n        localStorage.signedIn = true\n\n        let retryConfig = error.response.config\n        retryConfig.headers['X-CSRF-TOKEN'] = localStorage.csrf\n        return plainAxiosInstance.request(retryConfig)\n      }).catch(error => {\n        delete localStorage.csrf\n        delete localStorage.signedIn\n\n        location.replace('/')\n        return Promise.reject(error)\n      })\n  } else {\n    return Promise.reject(error)\n  }\n})\n\nexport { securedAxiosInstance, plainAxiosInstance }\n"]}]}